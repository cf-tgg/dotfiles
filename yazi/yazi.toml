# yazi.toml
# A TOML linter such as https://taplo.tamasfe.dev/ can use this schema to validate your config.
# If you encounter any issues, please make an issue at https://github.com/yazi-rs/schemas.
"$schema" = "https://yazi-rs.github.io/schemas/yazi.json"

[initializer]
command = "yascope"

[manager]
ratio          = [ 1, 4, 3 ]
sort_by        = "alphabetical"
sort_sensitive = false
sort_reverse   = false
sort_dir_first = true
sort_translit  = false
linemode       = "size_and_mtime"
show_hidden    = false
show_symlink   = false
scrolloff      = 5
mouse_events   = [ "click", "scroll", "touch", "move", "drag" ]
title_format   = "{cwd}"

[preview]
command         = 'yaspreview "{0}"'
wrap            = "no"
tab_size        = 3
max_width       = 2000
max_height      = 2000
cache_dir       = "~/.cache/ueberzugpp"
# cache_dir       = ""
image_delay     = 30
image_filter    = "triangle"
image_quality   = 90
sixel_fraction  = 15
ueberzug_scale  = 1.0
ueberzug_offset = [ 0.0, 0.0, 0.0, 0.0 ]

[opener]

edit = [
	{ run = '${EDITOR:-vi} "$@"', desc = "$EDITOR", block = true, for = "unix" },
]
open = [
	{ run = 'xdg-open "$@"', desc = "Open", orphan = true, for = "unix" },
]
reveal = [
	{ run = 'yas2xiv "$@"', desc = "Reveal", orphan = true, for = "unix" },
	{ run = '''exiftool "$1"; echo "Press enter to exit"; read _''', block = true, desc = "Show EXIF", for = "unix" },
]
extract = [
	{ run = 'ya pub extract --list "$@"', desc = "Extract here", for = "unix" },
]
play = [
	{ run = 'linkhandler "$@"', orphan = true, for = "unix" },
	{ run = '''mediainfo "$1"; echo "Press enter to exit"; read _''', block = true, desc = "mediainfo", for = "unix" },
]

[open]

rules = [
	{ name = "*/", use = [ "edit", "open", "reveal" ] },
	{ mime = "text/*", use = [ "edit", "reveal" ] },
	{ mime = "image/*", use = [ "reveal", "open" ] },
	{ mime = "{audio,video}/*", use = [ "play", "reveal" ] },
	{ mime = "application/{zip,rar,7z*,tar,gzip,xz,zstd,bzip*,lzma,compress,archive,cpio,arj,xar,ms-cab*}", use = [ "extract", "reveal" ] },
	{ mime = "application/{json,ndjson}", use = [ "edit", "reveal" ] },
	{ mime = "*/javascript", use = [ "edit", "reveal" ] },
	{ mime = "inode/empty", use = [ "edit", "reveal" ] },
	{ name = "*", use = [ "open", "reveal" ] },
]

[tasks]

micro_workers    = 10
macro_workers    = 10
bizarre_retry    = 3
image_alloc      = 536870912  # 512MB
image_bound      = [ 0, 0 ]
suppress_preload = false

[plugin]

fetchers = [
	{ id = "mime", name = "*", run = "mime", if = "!mime", prio = "high" },
]

spotters = [
	{ name = "*/", run = "folder" },
	{ mime = "text/*", run = "code" },
	{ mime = "*/{xml,javascript,wine-extension-ini}", run = "code" },
	{ mime = "image/{avif,hei?,jxl,svg+xml}", run = "magick" },
	{ mime = "image/*", run = "image" },
	{ mime = "video/*", run = "video" },
	{ name = "*", run = "file" },
]

preloaders = [
	{ mime = "image/{avif,hei?,jxl,svg+xml}", run = "magick" },
	{ mime = "image/*", run = "image" },
	{ mime = "video/*", run = "video" },
	{ mime = "application/pdf", run = "pdf" },
	{ mime = "font/*", run = "font" },
	{ mime = "application/ms-opentype", run = "font" },
]

prepend_previewer = [
    { mime = "image/*", run = "yaspreview" },
    { mime = "image/avif", run = "yaspreview" },
    { mime = "image/x-xcf", run = "yaspreview" },
    { mime = "image/vnd.djvu", run = "yaspreview" },
    { mime = "audio/*", run = "yaspreview" },
    { mime = "video/*", run = "yaspreview" },
    { mime = "*/mobi", run = "yaspreview" },
    { mime = "*/epub", run = "yaspreview" },
    { mime = "*/epub+zip", run = "yaspreview" },
    { mime = "*/pdf", run = "yaspreview" },
    { mime = "text/*", run = "yaspreview" },
    { mime = "text/troff", run = "yaspreview" },
    { mime = "text/html", run = "yaspreview" },
    { mime = "*/xml", run = "yaspreview" },
    { mime = "*opendocument*", run = "yaspreview" },
    { mime = "application/octet-stream", run = "yaspreview" },
    { mime = "application/json", run = "yaspreview" },
    { mime = "application/x-ndjson", run = "yaspreview" },
    { mime = "application/pgp-encrypted", run = "yaspreview" },
    { mime = "application/*zip", run = "yaspreview" },
]

previewers = [
	{ name = "*/", run = "folder", sync = true },
	{ mime = "text/*", run = "code" },
	{ mime = "*/{xml,javascript,wine-extension-ini}", run = "code" },
	{ mime = "application/{json,ndjson}", run = "json" },
	{ mime = "image/{avif,hei?,jxl,svg+xml}", run = "magick" },
	{ mime = "image/*", run = "image" },
	{ mime = "video/*", run = "video" },
	{ mime = "application/pdf", run = "pdf" },
	{ mime = "application/{zip,rar,7z*,tar,gzip,xz,zstd,bzip*,lzma,compress,archive,cpio,arj,xar,ms-cab*}", run = "archive" },
	{ mime = "application/{debian*-package,redhat-package-manager,rpm,android.package-archive}", run = "archive" },
	{ name = "*.{AppImage,appimage}", run = "archive" },
	{ mime = "application/{iso9660-image,qemu-disk,ms-wim,apple-diskimage}", run = "archive" },
	{ mime = "application/virtualbox-{vhd,vhdx}", run = "archive" },
	{ name = "*.{img,fat,ext,ext2,ext3,ext4,squashfs,ntfs,hfs,hfsx}", run = "archive" },
	{ mime = "font/*", run = "font" },
	{ mime = "application/ms-opentype", run = "font" },
	{ mime = "inode/empty", run = "empty" },
	{ name = "*", run = "file" },
]

[input]

cursor_blink = false

cd_title  = "cd: "
cd_origin = "top-center"
cd_offset = [ 0, 2, 50, 3 ]

create_title  = [ "mk:", "mkd:" ]
create_origin = "top-center"
create_offset = [ 0, 2, 50, 3 ]

rename_title  = "mv:"
rename_origin = "hovered"
rename_offset = [ 0, 1, 50, 3 ]

filter_title  = "filter:"
filter_origin = "top-center"
filter_offset = [ 0, 2, 50, 3 ]

find_title  = [ "find[n]:", "findprev[N]:" ]
find_origin = "top-center"
find_offset = [ 0, 2, 50, 3 ]

search_title  = "Search via {n}:"
search_origin = "top-center"
search_offset = [ 0, 2, 50, 3 ]

shell_title  = [ "Shell:", "Shell (block):" ]
shell_origin = "top-center"
shell_offset = [ 0, 2, 50, 3 ]

[confirm]
trash_title 	= "Trash {n} selected file{s}?"
trash_origin	= "center"
trash_offset	= [ 0, 0, 70, 20 ]

delete_title 	= "Permanently delete {n} selected file{s}?"
delete_origin	= "center"
delete_offset	= [ 0, 0, 70, 20 ]

overwrite_title   = "Overwrite file?"
overwrite_content = "Will overwrite the following file:"
overwrite_origin  = "center"
overwrite_offset  = [ 0, 0, 50, 15 ]

quit_title   = "Quit?"
quit_content = "The following task is still running, are you sure you want to quit?"
quit_origin  = "center"
quit_offset  = [ 0, 0, 50, 15 ]

[pick]

open_title  = "Open with:"
open_origin = "hovered"
open_offset = [ 0, 1, 50, 7 ]

[which]

sort_by        = "none"
sort_sensitive = false
sort_reverse   = false
sort_translit  = false
